{"version":3,"sources":["C:/work/git/testsollan/testsollan-frontend/src/$_gendir lazy","C:/work/git/testsollan/testsollan-frontend/src/app/app.component.css","C:/work/git/testsollan/testsollan-frontend/src/app/app.component.html","C:/work/git/testsollan/testsollan-frontend/src/app/app.component.ts","C:/work/git/testsollan/testsollan-frontend/src/app/app.module.ts","C:/work/git/testsollan/testsollan-frontend/src/app/general/backend/backend.service.ts","C:/work/git/testsollan/testsollan-frontend/src/app/general/utils/Consts.ts","C:/work/git/testsollan/testsollan-frontend/src/app/general/utils/constants.ts","C:/work/git/testsollan/testsollan-frontend/src/app/home/home.component.css","C:/work/git/testsollan/testsollan-frontend/src/app/home/home.component.html","C:/work/git/testsollan/testsollan-frontend/src/app/home/home.component.ts","C:/work/git/testsollan/testsollan-frontend/src/app/home/home.service.ts","C:/work/git/testsollan/testsollan-frontend/src/app/question/question.component.css","C:/work/git/testsollan/testsollan-frontend/src/app/question/question.component.html","C:/work/git/testsollan/testsollan-frontend/src/app/question/question.component.ts","C:/work/git/testsollan/testsollan-frontend/src/app/questions/questions.component.css","C:/work/git/testsollan/testsollan-frontend/src/app/questions/questions.component.html","C:/work/git/testsollan/testsollan-frontend/src/app/questions/questions.component.ts","C:/work/git/testsollan/testsollan-frontend/src/app/questions/questions.service.ts","C:/work/git/testsollan/testsollan-frontend/src/app/result/result.component.css","C:/work/git/testsollan/testsollan-frontend/src/app/result/result.component.html","C:/work/git/testsollan/testsollan-frontend/src/app/result/result.component.ts","C:/work/git/testsollan/testsollan-frontend/src/app/result/resultholder.service.ts","C:/work/git/testsollan/testsollan-frontend/src/app/timer/timer.component.css","C:/work/git/testsollan/testsollan-frontend/src/app/timer/timer.component.html","C:/work/git/testsollan/testsollan-frontend/src/app/timer/timer.component.ts","C:/work/git/testsollan/testsollan-frontend/src/app/timer/timer.service.ts","C:/work/git/testsollan/testsollan-frontend/src/environments/environment.ts","C:/work/git/testsollan/testsollan-frontend/src/main.ts","C:/work/git/testsollan/testsollan-frontend/src/md-components.module.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/work/git/testsollan/testsollan-frontend/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/work/git/testsollan/testsollan-frontend/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/work/git/testsollan/testsollan-frontend/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/app/app.component.ts","import { QuestionsService } from './questions/questions.service';\r\nimport { HomeService } from './home/home.service';\r\nimport { MdComponentsModule } from './../md-components.module';\r\nimport { PercentPipe } from '@angular/common';\r\nimport { ResultholderService } from './result/resultholder.service';\r\nimport { BackendService } from './general/backend/backend.service';\r\nimport { TimerComponent } from './timer/timer.component';\r\nimport { TimerService } from './timer/timer.service';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, Component } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MATERIAL_COMPATIBILITY_MODE } from '@angular/material';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { QuestionComponent } from './question/question.component';\r\nimport { QuestionsComponent } from './questions/questions.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ResultComponent } from './result/result.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    QuestionComponent,\r\n    QuestionsComponent,\r\n    ResultComponent,\r\n    TimerComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MdComponentsModule,\r\n    HttpModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent },\r\n      {\r\n        path: 'question', component: QuestionsComponent, children: [\r\n          { path: ':id', component: QuestionComponent }\r\n        ]\r\n      },\r\n      { path: 'result', component: ResultComponent },\r\n      { path: '**', component: HomeComponent }\r\n    ])\r\n  ],\r\n  providers: [QuestionsService,\r\n    TimerService,\r\n    BackendService,\r\n    TimerComponent,\r\n    ResultholderService,\r\n    HomeService,\r\n    { provide: MATERIAL_COMPATIBILITY_MODE, useValue: true }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/app/app.module.ts","import { Consts } from '../utils/Consts';\nimport { Observable } from 'rxjs/Rx';\nimport { Http, Headers } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Response } from './response';\n\n@Injectable()\nexport class BackendService {\n\n  constructor(private http: Http) { }\n\n  get(uri: string, params?: {}): Observable<Response> {\n    return this.http\n      .get(this.getUri(uri), this.createParamsObject(params))\n      .map(resp => resp.json());\n  }\n\n  post(uri: string, body?: any, params?: {}): Observable<Response> {\n    return this.http\n      .post(this.getUri(uri), body, this.createParamsObject(params))\n      .map(resp => resp.json());\n  }\n\n  private createParamsObject(params?: {}) {\n    let headers = new Headers();\n    // headers.append(Consts.Headers.Key.ACCEPT, Consts.Header.Value.APPLICATION_JSON);\n    // headers.append(Consts.Header.Key.CONTENT_TYPE, Consts.Header.Value.APPLICATION_JSON);\n    // headers.append(Consts.Header.Key.TOKEN, this.storageService.getItem(Consts.Storage.Key.TOKEN));\n\n    return { params: params, headers: headers };\n  }\n  private getUri(uri: string) {\n    return Consts.BackendMapping.INDEX+uri;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/app/general/backend/backend.service.ts","export class Consts {\r\n\r\n    static Headers = class {\r\n        static Key = class {\r\n            const static ACCEPT = 'Accept';\r\n            const static CONTENT_TYPE = 'Content-Type';\r\n        };\r\n        static Value = class {\r\n            const static APPLICATION_JSON = 'application/json';\r\n        };\r\n    };\r\n\r\n    static BackendMapping = class {\r\n        const static INDEX = '/api';\r\n        static Timer = class {\r\n            const static START = '/startTimer';\r\n            const static STOP = '/stopTimer';\r\n            const static TIME_ELAPSED = '/timeElapsed';\r\n            const static GET_TIME = '/getTime';\r\n            const static GET_STATUS = '/timerStatus';\r\n        };\r\n\r\n        static Answers = class {\r\n            const static GET_ANSWERS = \"/answers\";\r\n            const static CHECK_ANSWERS = \"/validateAnswers\";\r\n        }\r\n\r\n        static Checkers = class {\r\n            const static GET_WAS_STARTED = \"/getTimerStarted\";            \r\n        }\r\n\r\n    }\r\n\r\n    // Consts.BackendMapping.INDEX+\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/app/general/utils/Consts.ts","export const questionPath = '/question';\r\nexport const resultPath = '/result';\r\nexport const homePath = '';\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/app/general/utils/constants.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/work/git/testsollan/testsollan-frontend/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = main","module.exports = \"<mat-grid-list cols=\\\"1\\\" rowHeight=\\\"6:1\\\">\\r\\n    <mat-grid-tile><img src=\\\"http://localhost:4200/img/sollan.png\\\"></mat-grid-tile>\\r\\n    <mat-grid-tile>\\r\\n        <p>This test contains 40 questions. You have 40 minutes. Good luck!</p>\\r\\n    </mat-grid-tile>\\r\\n    <mat-grid-tile><button (click)=\\\"start()\\\" color=\\\"accent\\\" mat-raised-button matDialogClose=\\\"yes\\\">Start</button></mat-grid-tile>\\r\\n</mat-grid-list>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/work/git/testsollan/testsollan-frontend/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import { TimerService } from './../timer/timer.service';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { HomeService } from './home.service';\r\nimport { Consts } from '../general/utils/Consts';\r\nimport { BackendService } from '../general/backend/backend.service';\r\nimport { homePath, questionPath } from './../general/utils/constants';\r\nimport { TimerComponent } from './../timer/timer.component';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  \r\n  checker: boolean;\r\n\r\n  constructor(\r\n    private router: Router, \r\n    private homeService: HomeService,\r\n    private timerService: TimerService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    localStorage.clear();\r\n  }\r\n\r\n\r\n  ngDoCheck(){\r\n    if (sessionStorage.getItem('wasStarted')) {\r\n      this.homeService.getWasStarted()\r\n        .subscribe(started => {\r\n          this.checker = started\r\n          console.log(started);\r\n        });\r\n      \r\n        if (!this.checker) {\r\n        this.router.navigate([questionPath, 1]);\r\n      } else {\r\n        this.router.navigate([homePath]);\r\n        sessionStorage.clear();                \r\n      }\r\n    }\r\n  }\r\n\r\n  start() {\r\n    this.timerService.startTimer();\r\n    this.router.navigate([questionPath, 1]);\r\n    localStorage.setItem('currentQuestionId', '1');\r\n    sessionStorage.setItem('wasStarted', 'yes');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/app/home/home.component.ts","import { Router } from '@angular/router';\nimport { BackendService } from '../general/backend/backend.service';\nimport { Injectable } from '@angular/core';\nimport { Consts } from '../general/utils/Consts';\n\n@Injectable()\nexport class HomeService {\n  constructor(private backendService: BackendService, private router: Router) {}\n\n\n   getWasStarted(){\n    return this.backendService.get(Consts.BackendMapping.Checkers.GET_WAS_STARTED)\n    .map(response => {\n      if(response.ok){\n        console.log(response.item);\n        return response.item;\n      }else{\n        return 0;\n      }\n    });\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/app/home/home.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-grid-tile{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.example-radio-group {\\r\\n    display: -webkit-inline-box;\\r\\n    display: -ms-inline-flexbox;\\r\\n    display: inline-flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n    \\r\\n}\\r\\n  \\r\\n.example-radio-button {\\r\\n    margin: 5px;\\r\\n    border-color: white;\\r\\n}\\r\\n\\r\\n.answers-border {\\r\\n  background-color: #0d47a1;\\r\\n}\\r\\n\\r\\n.scrollable\\r\\n{\\r\\n  overflow: auto;\\r\\n  max-width: 1250px;  \\r\\n  max-height: 850px;\\r\\n}  \\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/work/git/testsollan/testsollan-frontend/src/app/question/question.component.css\n// module id = ../../../../../src/app/question/question.component.css\n// module chunks = main","module.exports = \"<mat-grid-list cols=\\\"8\\\" rowHeight=\\\"100px\\\">\\r\\n  <mat-grid-tile colspan=\\\"1\\\" rowspan=\\\"8\\\">\\r\\n    <button (click)=\\\"firstQuestion()\\\" color=\\\"accent\\\" mat-fab>\\r\\n      <mat-icon>first_page</mat-icon>\\r\\n    </button>\\r\\n    <button color=\\\"accent\\\" (click)=\\\"previousQuestion()\\\" mat-fab>\\r\\n      <mat-icon>chevron_left</mat-icon>\\r\\n    </button>\\r\\n  </mat-grid-tile>\\r\\n  <mat-grid-tile colspan=\\\"6\\\" rowspan=\\\"8\\\" *ngIf=\\\"answersLoaded\\\">\\r\\n    <div class=\\\"scrollable\\\">\\r\\n      <img src=\\\"{{images[questionId-1]}}\\\">\\r\\n    </div>\\r\\n  </mat-grid-tile>\\r\\n  <mat-grid-tile colspan=\\\"1\\\" rowspan=\\\"8\\\">\\r\\n    <button color=\\\"accent\\\" (click)=\\\"nextQuestion()\\\" mat-fab>\\r\\n      <mat-icon>chevron_right</mat-icon>\\r\\n    </button>\\r\\n    <button (click)=\\\"lastQuestion()\\\" color=\\\"accent\\\" mat-fab>\\r\\n      <mat-icon>last_page</mat-icon>\\r\\n    </button>\\r\\n  </mat-grid-tile>\\r\\n  \\r\\n    <mat-grid-tile colspan=\\\"8\\\" rowspan=\\\"2\\\" class=\\\"answers-border\\\">\\r\\n      <mat-radio-group [(ngModel)]=\\\"currentAnswerId\\\" *ngIf=\\\"answersLoaded\\\" name=\\\"group\\\" class=\\\"example-radio-group\\\">\\r\\n        <mat-radio-button class=\\\"example-radio-button\\\" *ngFor=\\\"let answer of answers\\\" [value]=\\\"answer.id\\\" #radio (change)=\\\"addAnswer(radio)\\\">\\r\\n          {{answer.content}}\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </mat-grid-tile>\\r\\n</mat-grid-list>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/work/git/testsollan/testsollan-frontend/src/app/question/question.component.html\n// module id = ../../../../../src/app/question/question.component.html\n// module chunks = main","import { QuestionsService } from './../questions/questions.service';\r\nimport { HomeService } from '../home/home.service';\r\nimport { TimerService } from './../timer/timer.service';\r\nimport { homePath, questionPath, resultPath } from './../general/utils/constants';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.css']\r\n})\r\nexport class QuestionComponent implements OnInit {\r\n  \r\n\r\n  questions = [];\r\n  answers = [];\r\n  currentAnswers = [];\r\n  images = [];\r\n  questionId;\r\n\r\n  questionsLoaded: boolean = false;\r\n  currentAnswerId;\r\n  answersLoaded: boolean = false;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private questionsService: QuestionsService,\r\n              private router: Router,\r\n              private timerService: TimerService,\r\n              private homeService: HomeService) { }\r\n         \r\n\r\n  ngOnInit() {\r\n    this.images = this.questionsService.getImages();\r\n\r\n    this.route.params\r\n      .subscribe(params => {\r\n      this.questionId = + params['id'];\r\n    });\r\n\r\n    this.currentAnswers = JSON.parse(localStorage.getItem('answers'));\r\n\r\n    if (!this.currentAnswers)\r\n      this.currentAnswers = [];\r\n\r\n      this.currentAnswerId = this.findAnswerById();\r\n      \r\n      this.storeCurrentQuestionId();\r\n      \r\n    }\r\n\r\n  ngDoCheck(){\r\n    if (!this.answers.length)\r\n      this.loadAnswers();\r\n      \r\n    if (!sessionStorage.getItem('wasStarted')) \r\n      this.router.navigate([homePath]);\r\n        \r\n    }\r\n  \r\n  nextQuestion() {\r\n    if (this.questionId < 40) {\r\n      this.questionId++;\r\n      this.currentAnswerId = this.findAnswerById();\r\n     }\r\n     this.loadAnswers();\r\n     this.router.navigate([questionPath, this.questionId]);\r\n     this.storeCurrentQuestionId();\r\n   }\r\n\r\n  previousQuestion() {\r\n    if (this.questionId > 1) {\r\n      this.questionId--;\r\n      this.currentAnswerId = this.findAnswerById();\r\n    }\r\n    this.loadAnswers();\r\n    this.router.navigate([questionPath, this.questionId]);\r\n    this.storeCurrentQuestionId();\r\n  }\r\n\r\n  firstQuestion() {\r\n    this.router.navigate([questionPath, 1]);\r\n    this.questionId = 1;\r\n    this.storeCurrentQuestionId();\r\n    this.loadAnswers();\r\n  }\r\n\r\n  lastQuestion() {\r\n    this.router.navigate([questionPath, 40]);\r\n    this.questionId = 40;\r\n    this.storeCurrentQuestionId();\r\n    this.loadAnswers();\r\n  }\r\n\r\n  addAnswer(radio: HTMLInputElement) {\r\n      let newAnswer = {\r\n      id: this.questionId,\r\n      value: radio.value\r\n    };\r\n\r\n   let found = this.currentAnswers.find(a => {\r\n        return a.id === newAnswer.id\r\n      });\r\n\r\n   if (found) {\r\n     found.value = newAnswer.value;\r\n      } else {\r\n        this.currentAnswers.push(newAnswer);\r\n      }\r\n\r\n    localStorage.setItem('answers', JSON.stringify(this.currentAnswers));\r\n}\r\n\r\n  findAnswerById(){\r\n      let found = this.currentAnswers.find(ans => {\r\n        return ans.id === this.questionId;\r\n      });\r\n\r\n        return found ? found.value : null;\r\n  }\r\n\r\n  storeCurrentQuestionId() {\r\n    localStorage.setItem('currentQuestionId', this.questionId);\r\n  }\r\n\r\n  loadAnswers(){\r\n    this.questionsService.getAnswers({\"questionId\": this.questionId})\r\n    .subscribe(answers => {\r\n      this.answers = answers;\r\n      this.answersLoaded = true;\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/app/question/question.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-icon {\\r\\n    padding: 0 14px;\\r\\n}\\r\\n  \\r\\n.example-spacer {\\r\\n    -webkit-box-flex: 1;\\r\\n        -ms-flex: 1 1 auto;\\r\\n            flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.example-input-field {\\r\\n    width: 20px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/work/git/testsollan/testsollan-frontend/src/app/questions/questions.component.css\n// module id = ../../../../../src/app/questions/questions.component.css\n// module chunks = main","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <span>Question {{questionId}}</span>\\r\\n    <span></span>\\r\\n    <span class=\\\"example-spacer\\\"></span>\\r\\n    <span></span>\\r\\n    <span>\\r\\n        <timer></timer>\\r\\n    </span>\\r\\n    <mat-icon class=\\\"example-icon\\\">schedule</mat-icon>\\r\\n    <button (click)=\\\"finish()\\\" color=\\\"accent\\\" mat-raised-button>Finish</button>\\r\\n</mat-toolbar>\\r\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/work/git/testsollan/testsollan-frontend/src/app/questions/questions.component.html\n// module id = ../../../../../src/app/questions/questions.component.html\n// module chunks = main","import { QuestionsService } from './questions.service';\r\nimport { TimerComponent } from './../timer/timer.component';\r\nimport { TimerService } from './../timer/timer.service';\r\nimport { resultPath, questionPath } from './../general/utils/constants';\r\nimport { ResultholderService } from './../result/resultholder.service';\r\nimport { BackendService } from './../general/backend/backend.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatSidenavModule } from '@angular/material';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'questions',\r\n  templateUrl: './questions.component.html',\r\n  styleUrls: ['./questions.component.css'],\r\n})\r\n\r\nexport class QuestionsComponent implements OnInit {\r\n\r\n \r\n  constructor(private route: ActivatedRoute, \r\n              private router: Router,\r\n              private timerService: TimerService,\r\n              private questionsService: QuestionsService,\r\n              private holder: ResultholderService) { }\r\n\r\n  private questionId;\r\n  private answers;\r\n  private result: any = {};\r\n\r\n  ngOnInit() {}\r\n\r\n  ngDoCheck() {\r\n    this.questionId = localStorage.getItem('currentQuestionId');\r\n  }\r\n\r\n  finish() {\r\n    if(this.answers = JSON.parse(localStorage.getItem('answers')))\r\n        this.questionsService.getResult(this.answers)\r\n          .subscribe(result => {\r\n            this.result = result;\r\n            this.holder.holdResult(this.result);\r\n            this.router.navigate([resultPath]);\r\n            this.timerService.stopTimer();\r\n            sessionStorage.setItem('wasStarted', 'no');        \r\n          });\r\n    else alert('Nie zaznaczono żadnej odpowiedzi!');\r\n    \r\n    \r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/app/questions/questions.component.ts","import { Consts } from './../general/utils/Consts';\r\nimport { BackendService } from './../general/backend/backend.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class QuestionsService {\r\n\r\n \r\n  constructor(private backendService: BackendService) {\r\n\r\n\r\n   }\r\n\r\n   getAnswers(questionId) {\r\n    return this.backendService.get(Consts.BackendMapping.Answers.GET_ANSWERS, questionId).map(response => {\r\n      if (response.ok) {\r\n        return response.items;\r\n      } else {\r\n        return 0;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  getResult(answers) {\r\n    return this.backendService.post(Consts.BackendMapping.Answers.CHECK_ANSWERS, answers).map(response => {\r\n      if (response.ok) {\r\n        return response.item;\r\n      } else {\r\n        return 0;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  getImages () {\r\n    let images = [];\r\n    for ( let x = 1; x <= 40; x++) {\r\n      images.push('img/q' + x + '.jpg');\r\n    }\r\n    return images;\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/app/questions/questions.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n        -ms-flex-direction: column;\\r\\n            flex-direction: column;\\r\\n    max-height: 500px;\\r\\n    min-width: 300px;\\r\\n  }\\r\\n  \\r\\n  .example-spacer {\\r\\n    -webkit-box-flex: 1;\\r\\n        -ms-flex: 1 1 auto;\\r\\n            flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.goodanswer{\\r\\n  color: green;\\r\\n}\\r\\n\\r\\n.wronganswer{\\r\\n  color: red;\\r\\n}\\r\\n\\r\\nmat-grid-tile{\\r\\n  background-color: lightblue;\\r\\n}\\r\\n\\r\\nmat-list-item{\\r\\n  text-align: center;\\r\\n  padding-top: 1px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/work/git/testsollan/testsollan-frontend/src/app/result/result.component.css\n// module id = ../../../../../src/app/result/result.component.css\n// module chunks = main","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n    <span>Points: {{points}} / 40</span>\\r\\n    <span class=\\\"example-spacer\\\"></span>\\r\\n    <span>{{percent | percent}}</span>\\r\\n</mat-toolbar>\\r\\n<!-- <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"4:1\\\">\\r\\n    <mat-grid-tile *ngFor=\\\"let answer of answers\\\">\\r\\n     <b>Question  {{answer.questionId}}</b>\\r\\n        <mat-icon class=\\\"goodanswer\\\" *ngIf=\\\"answer.correct\\\">check_box</mat-icon>\\r\\n        <mat-icon class=\\\"wronganswer\\\" *ngIf=\\\"!answer.correct\\\" >indeterminate_check_box</mat-icon>\\r\\n      </mat-grid-tile>\\r\\n  </mat-grid-list> -->\\r\\n\\r\\n<mat-list>\\r\\n    <mat-list-item *ngFor=\\\"let answer of answers\\\">\\r\\n        <mat-icon mat-list-icon class=\\\"goodanswer\\\" *ngIf=\\\"answer.correct\\\">check_box</mat-icon>\\r\\n        <mat-icon mat-list-icon class=\\\"wronganswer\\\" *ngIf=\\\"!answer.correct\\\" >indeterminate_check_box</mat-icon>\\r\\n        <p mat-line>Question {{answer.questionId}}</p>\\r\\n    </mat-list-item>\\r\\n</mat-list>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/work/git/testsollan/testsollan-frontend/src/app/result/result.component.html\n// module id = ../../../../../src/app/result/result.component.html\n// module chunks = main","import { questionPath, homePath } from './../general/utils/constants';\r\nimport { TimerService } from './../timer/timer.service';\r\nimport { ResultholderService } from './resultholder.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Component({\r\n  selector: 'app-result',\r\n  templateUrl: './result.component.html',\r\n  styleUrls: ['./result.component.css']\r\n})\r\nexport class ResultComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute,\r\n\r\n    private router: Router,\r\n    private timerService: TimerService) { }\r\n\r\n  points: any;\r\n  percent: any;\r\n  answers: any[];\r\n  questionId;\r\n\r\n  ngOnInit() {\r\n\r\n    this.questionId = localStorage.getItem('currentQuestionId');\r\n    if (sessionStorage.getItem('wasStarted') == 'yes') {\r\n      this.router.navigate([questionPath, this.questionId]);\r\n    } else if (!sessionStorage.getItem('wasStarted')) {\r\n      this.router.navigate([homePath]);\r\n    }\r\n\r\n    this.points = localStorage.getItem('points');\r\n    this.answers = JSON.parse(localStorage.getItem('final'));\r\n    this.percent = this.points / 40;\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/app/result/result.component.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ResultholderService {\r\n\r\n  result;\r\n  private _answers: any[];\r\n  private _points: any;\r\n  \r\n  constructor() { }\r\n\r\n  holdResult(result){\r\n    this._answers = result.results;\r\n    this._points = result.points;\r\n    localStorage.setItem('final', JSON.stringify(this._answers));\r\n    localStorage.setItem('points', this._points);\r\n  }\r\n\r\n  get answers(){\r\n    return this._answers;\r\n  }\r\n\r\n  get points(){\r\n    return this._points;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/app/result/resultholder.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/work/git/testsollan/testsollan-frontend/src/app/timer/timer.component.css\n// module id = ../../../../../src/app/timer/timer.component.css\n// module chunks = main","module.exports = \"<span>{{time}}</span>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/work/git/testsollan/testsollan-frontend/src/app/timer/timer.component.html\n// module id = ../../../../../src/app/timer/timer.component.html\n// module chunks = main","import { log } from 'util';\r\nimport { homePath } from '../general/utils/constants';\r\nimport { timeout } from 'rxjs/operator/timeout';\r\nimport { TimerService } from './timer.service';\r\nimport { Http } from '@angular/http';\r\nimport { Component, OnInit, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'timer',\r\n  templateUrl: './timer.component.html',\r\n  styleUrls: ['./timer.component.css']\r\n})\r\n\r\n@Injectable()\r\nexport class TimerComponent implements OnInit {\r\n  time: string;\r\n  constructor(private timerService: TimerService,\r\n    private router: Router) { }\r\n\r\n  startTimer() {\r\n    if (sessionStorage.getItem('wasStarted') == 'yes') {\r\n      this.timerService.startTimer();\r\n      Observable.interval(1000).takeWhile(() => true).subscribe(() => this.getTimer()); \r\n    } else {\r\n      this.router.navigate([homePath]);\r\n      sessionStorage.clear(); \r\n    }\r\n    \r\n  }\r\n  getTimer() {\r\n    this.timerService.getTimer()\r\n      .subscribe(time => {\r\n        this.time = time;\r\n      });\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.startTimer();\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/app/timer/timer.component.ts","import { QuestionsService } from './../questions/questions.service';\r\nimport { ResultholderService } from './../result/resultholder.service';\r\nimport { resultPath } from './../general/utils/constants';\r\nimport { QuestionsComponent } from '../questions/questions.component';\r\nimport { QuestionComponent } from '../question/question.component';\r\nimport { Consts } from '../general/utils/Consts';\r\nimport { BackendService } from '../general/backend/backend.service';\r\nimport { TimerComponent } from './../timer/timer.component';\r\nimport { Injectable } from '@angular/core';\r\nimport { Response } from '@angular/http';\r\nimport { Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class TimerService {\r\n\r\n  answers;\r\n  result;\r\n  \r\n  constructor(private backendService: BackendService, \r\n              private router: Router, \r\n              private holder: ResultholderService, \r\n              private service: QuestionsService) {\r\n  }\r\n\r\n  startTimer() {\r\n    return this.backendService.get(Consts.BackendMapping.Timer.START).subscribe(response => {\r\n      if (response.ok) {\r\n        console.log(response.item);\r\n        return response.item;\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  }\r\n\r\n  stopTimer() {\r\n    return this.backendService.get(Consts.BackendMapping.Timer.STOP).subscribe(response => {\r\n      if (response.ok) {\r\n        console.log(response.item);\r\n        return response.item;\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  }\r\n\r\n  getTimer() {\r\n    return this.backendService.get(Consts.BackendMapping.Timer.GET_TIME).map(response => {\r\n      if (response.ok) {\r\n        if(response.item !== \"0:00\"){\r\n        return response.item;\r\n        }else{\r\n          if(this.answers = JSON.parse(localStorage.getItem('answers')))\r\n          this.service.getResult(this.answers)\r\n            .subscribe(result => {\r\n              this.result = result;\r\n              this.holder.holdResult(this.result);\r\n              this.router.navigate([resultPath]);\r\n              this.stopTimer();\r\n              sessionStorage.setItem('wasStarted', 'no');\r\n            });\r\n        }\r\n      } else {\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // private parseData(res: Response) {\r\n  //   return res.json() || [];\r\n  // }\r\n\r\n  // private handleError(error: Response | any) {\r\n  //   let errorMessage: string;\r\n\r\n  //   errorMessage = error.message ? error.message : error.toString();\r\n  //   return Observable.throw(errorMessage);\r\n  // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/app/timer/timer.service.ts","export const environment = {\r\n  production: true\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/main.ts","import { MatRadioModule, MatIconModule, MatToolbarModule, MatGridListModule, MatCheckboxModule, MatButtonModule, MatListModule } from '@angular/material';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n exports: [\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatGridListModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatRadioModule,\r\n  MatListModule\r\n ]\r\n})\r\nexport class MdComponentsModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/work/git/testsollan/testsollan-frontend/src/md-components.module.ts"],"sourceRoot":"webpack:///"}